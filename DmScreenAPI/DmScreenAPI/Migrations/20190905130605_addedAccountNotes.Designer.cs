// <auto-generated />
using System;
using DmScreenAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DmScreenAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190905130605_addedAccountNotes")]
    partial class addedAccountNotes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DmScreenAPI.Context.Entities.AccountCreatureCard", b =>
                {
                    b.Property<int>("AccountCreatureCardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<int>("CreatureCardId");

                    b.Property<decimal>("Sequence");

                    b.HasKey("AccountCreatureCardId");

                    b.ToTable("AccountCreatureCards");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.AccountNotes", b =>
                {
                    b.Property<int>("AccountNotesId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Notes");

                    b.HasKey("AccountNotesId");

                    b.ToTable("AccountNotes");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.AccountResource", b =>
                {
                    b.Property<int>("AccountResourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<int>("ResourceId");

                    b.Property<decimal>("Sequence");

                    b.HasKey("AccountResourceId");

                    b.ToTable("AccountResources");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.Cheatsheet", b =>
                {
                    b.Property<int>("Cheatsheetid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Html");

                    b.Property<string>("Name");

                    b.HasKey("Cheatsheetid");

                    b.ToTable("Cheatsheets");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.Creature", b =>
                {
                    b.Property<int>("CreatureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC");

                    b.Property<int?>("CR");

                    b.Property<int>("Charisma");

                    b.Property<int?>("CharismaBonus");

                    b.Property<string>("Class");

                    b.Property<int>("Constitution");

                    b.Property<int?>("ConstitutionBonus");

                    b.Property<int>("Dexterity");

                    b.Property<int?>("DexterityBonus");

                    b.Property<string>("Image");

                    b.Property<int>("Initiative");

                    b.Property<int?>("InitiativeBonus");

                    b.Property<int?>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("PInsight");

                    b.Property<int>("PInvestigation");

                    b.Property<int>("PPerception");

                    b.Property<int?>("ProficiencyBonus");

                    b.Property<string>("Race");

                    b.Property<int>("Speed");

                    b.Property<int>("Strength");

                    b.Property<int?>("StrengthBonus");

                    b.Property<int>("Wisdom");

                    b.Property<int?>("WisdomBonus");

                    b.Property<bool>("isHostile");

                    b.HasKey("CreatureId");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.CreatureCard", b =>
                {
                    b.Property<int>("CreatureCardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountCreatureCardId");

                    b.Property<int>("AccountId");

                    b.Property<int?>("Charisma");

                    b.Property<int?>("Constitution");

                    b.Property<int?>("CreatureId");

                    b.Property<int>("CurrentHP");

                    b.Property<int?>("Dexterity");

                    b.Property<int?>("Initiative");

                    b.Property<int>("MaxHP");

                    b.Property<string>("Notes");

                    b.Property<int?>("Strength");

                    b.Property<int?>("Wisdom");

                    b.Property<bool>("isHostile");

                    b.HasKey("CreatureCardId");

                    b.HasIndex("AccountCreatureCardId");

                    b.HasIndex("CreatureId");

                    b.ToTable("CreatureCards");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountResourceId");

                    b.Property<string>("Category");

                    b.Property<string>("Html");

                    b.HasKey("Id");

                    b.HasIndex("AccountResourceId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("DmScreenAPI.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountCreatureCardId");

                    b.Property<int?>("AccountResourceId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DeletedAt");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountCreatureCardId");

                    b.HasIndex("AccountResourceId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.CreatureCard", b =>
                {
                    b.HasOne("DmScreenAPI.Context.Entities.AccountCreatureCard")
                        .WithMany("CreatureCards")
                        .HasForeignKey("AccountCreatureCardId");

                    b.HasOne("DmScreenAPI.Context.Entities.Creature", "Creature")
                        .WithMany()
                        .HasForeignKey("CreatureId");
                });

            modelBuilder.Entity("DmScreenAPI.Context.Entities.Resource", b =>
                {
                    b.HasOne("DmScreenAPI.Context.Entities.AccountResource")
                        .WithMany("Resources")
                        .HasForeignKey("AccountResourceId");
                });

            modelBuilder.Entity("DmScreenAPI.Entities.Account", b =>
                {
                    b.HasOne("DmScreenAPI.Context.Entities.AccountCreatureCard")
                        .WithMany("Resources")
                        .HasForeignKey("AccountCreatureCardId");

                    b.HasOne("DmScreenAPI.Context.Entities.AccountResource")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountResourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
